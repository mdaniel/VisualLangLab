<VLL-Grammar>
  <Whitespace>\s+</Whitespace>
  <Comments></Comments>
  <Tokens>
    <Literal Name="COLON" Pattern=":"/>
    <Literal Name="COMMA" Pattern=","/>
    <Literal Name="FALSE" Pattern="false"/>
    <Literal Name="LBKT" Pattern="["/>
    <Literal Name="LCURLY" Pattern="{"/>
    <Literal Name="NULL" Pattern="null"/>
    <Literal Name="RBKT" Pattern="]"/>
    <Literal Name="RCURLY" Pattern="}"/>
    <Literal Name="TRUE" Pattern="true"/>
    <Regex Name="floatingPointNumber" Pattern="-?(\d+(\.\d*)?|\d*\.\d+)([eE][+-]?\d+)?[fFdD]?"/>
    <Regex Name="stringLiteral" Pattern="&quot;([^&quot;\p{Cntrl}\\]|\\[\\/bfnrt]|\\u[a-fA-F0-9]{4})*&quot;"/>
  </Tokens>
  <Parsers>
    <Parser Name="arr">
        <Sequence Mult="1" ErrMsg="">
          <Token Ref="LBKT" Mult="1" ErrMsg=""/>
          <RepSep Mult="*" ErrMsg="">
            <Reference Ref="value" Mult="1" ErrMsg=""/>
            <Token Ref="COMMA" Mult="1" ErrMsg=""/>
          </RepSep>
          <Token Ref="RBKT" Mult="1" ErrMsg=""/>
        </Sequence>
    </Parser>
    <Parser Name="member">
        <Sequence Mult="1" ErrMsg="">
          <Token Ref="stringLiteral" Mult="1" ErrMsg=""/>
          <Token Ref="COLON" Mult="1" ErrMsg=""/>
          <Reference Ref="value" Mult="1" ErrMsg=""/>
        </Sequence>
    </Parser>
    <Parser Name="obj">
        <Sequence Mult="1" ErrMsg="">
          <Token Ref="LCURLY" Mult="1" ErrMsg=""/>
          <RepSep Mult="*" ErrMsg="">
            <Reference Ref="member" Mult="1" ErrMsg=""/>
            <Token Ref="COMMA" Mult="1" ErrMsg=""/>
          </RepSep>
          <Token Ref="RCURLY" Mult="1" ErrMsg=""/>
        </Sequence>
    </Parser>
    <Parser Name="value">
        <Choice Mult="1" ErrMsg="illegal start of value">
          <Reference Ref="obj" Mult="1" ErrMsg=""/>
          <Reference Ref="arr" Mult="1" ErrMsg=""/>
          <Token Ref="stringLiteral" Mult="1" ErrMsg=""/>
          <Token Ref="floatingPointNumber" Mult="1" ErrMsg=""/>
          <Token Ref="NULL" Mult="1" ErrMsg=""/>
          <Token Ref="TRUE" Mult="1" ErrMsg=""/>
          <Token Ref="FALSE" Mult="1" ErrMsg=""/>
        </Choice>
    </Parser>
  </Parsers>
</VLL-Grammar>
