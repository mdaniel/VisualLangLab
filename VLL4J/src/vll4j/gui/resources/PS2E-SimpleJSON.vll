<?xml version="1.0"?>

<!-- *****************  Do not edit  ***************** -->
<!-- Generated by VisualLangLab (http://vll.java.net/) -->
<!-- *****************  Do not edit  ***************** -->
<VLL-Grammar>
  <Tokens>
    <Literal Name="COLON" Pattern=":" />
    <Literal Name="COMMA" Pattern="," />
    <Literal Name="FALSE" Pattern="false" />
    <Literal Name="LBKT" Pattern="[" />
    <Literal Name="LCURLY" Pattern="{" />
    <Literal Name="NULL" Pattern="null" />
    <Literal Name="RBKT" Pattern="]" />
    <Literal Name="RCURLY" Pattern="}" />
    <Literal Name="TRUE" Pattern="true" />
    <Regex Name="floatingPointNumber" Pattern="\\-?(\\d+(\\.\\d*)?|\\d*\\.\\d+)([eE][+-]?\\d+)?[fFdD]?" />
    <Regex Name="stringLiteral" Pattern="\&quot;[^&quot;]*\&quot;" />
  </Tokens>
  <Whitespace>\\s+</Whitespace>
  <Comments></Comments>
  <Parsers>
    <Parser Name="Value" >
      <Choice ErrMsg="illegal start of value" Description="The JSON alternative forms" >
        <Reference Ref="obj" />
        <Reference Ref="arr" />
        <Token Ref="stringLiteral" />
        <Token Ref="floatingPointNumber" />
        <Token Ref="NULL" />
        <Token Ref="TRUE" />
        <Token Ref="FALSE" />
      </Choice>
    </Parser>
    <Parser Name="arr" >
      <Sequence Description="A JSON array&apos;s structure " >
        <Token Ref="LBKT" />
        <RepSep Mult="*" >
          <Reference Ref="Value" />
          <Token Ref="COMMA" />
        </RepSep>
        <Token Ref="RBKT" />
      </Sequence>
    </Parser>
    <Parser Name="member" >
      <Sequence Description="A JSON member&apos;s structure" >
        <Token Ref="stringLiteral" />
        <Token Ref="COLON" />
        <Reference Ref="Value" />
      </Sequence>
    </Parser>
    <Parser Name="obj" >
      <Sequence Description="A JSON object&apos;s structure" >
        <Token Ref="LCURLY" />
        <RepSep Mult="*" >
          <Reference Ref="member" />
          <Token Ref="COMMA" />
        </RepSep>
        <Token Ref="RCURLY" />
      </Sequence>
    </Parser>
  </Parsers>
</VLL-Grammar>
